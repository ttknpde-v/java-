package ttknpdev.gui.tabel_reads;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import ttknpdev.entity.Toy;
import ttknpdev.entity.ToyTableModel;
import ttknpdev.gui.frame.MyFrame;
import ttknpdev.service.ToyService;

public class ShowToys extends javax.swing.JPanel implements ActionListener {

   private MyFrame frame;
   private JTable jTableToys;
   private ToyTableModel toyTableModel;
   private ToyService toyService;

   public ShowToys() {
      // for initial
      initComponents();
      frame = new MyFrame("READS");
      frame.setSize(500, 350);
      frame.setDefaultCloseOperation(frame.DISPOSE_ON_CLOSE); // use dispose instead exit , it can delete one by one frame 
      toyService = new ToyService(); 
      jTableToys = new JTable();
      toyTableModel = new ToyTableModel();

   }

   /**
    * This method is called from within the constructor to
    * initialize the form. WARNING: Do NOT modify this code.
    * The content of this method is always regenerated by
    * the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      jLabelTitle = new javax.swing.JLabel();
      jScrollPaneTable = new javax.swing.JScrollPane();
      jButtonDelete = new javax.swing.JButton();

      jLabelTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
      jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      jLabelTitle.setText("Toys Table");

      jButtonDelete.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
      jButtonDelete.setText("delete last order");

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jScrollPaneTable)
               .addComponent(jLabelTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                  .addGap(0, 0, Short.MAX_VALUE)
                  .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap())
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGap(18, 18, 18)
            .addComponent(jLabelTitle)
            .addGap(18, 18, 18)
            .addComponent(jScrollPaneTable, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(21, Short.MAX_VALUE))
      );
   }// </editor-fold>//GEN-END:initComponents


   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton jButtonDelete;
   private javax.swing.JLabel jLabelTitle;
   private javax.swing.JScrollPane jScrollPaneTable;
   // End of variables declaration//GEN-END:variables

   
   public void display() {
      frame.setContentPane(this); // add this panel
      /* 
         I found some bug I seted setVisible(true) on this frame (Parent)
         But when test it didn't show 
         I fixed by setting to it agian!!
         That's perfect
       */
      frame.setVisible(true);
         
      
      List<Toy> toys = toyService.reads(); // connect and query 
      
      toyTableModel.setToys(toys); // prepare model for Jtable class
      jTableToys.setModel(toyTableModel); // set model to Jtable

      // order importance !!
      jTableToys.setCellSelectionEnabled(true); // setting for user can select once
      /*** 
         Don't forget 
         you extend JPanel
         You can use add()
         it will call JPanel 
         because extend 
      */
      
      /* this is solution when you can't add Jtable to JScrollPane */
      jScrollPaneTable.getViewport().add(jTableToys); 
      
      jButtonDelete.addActionListener(this);
      
      /* way to do some thing when close frame  */
      frame.addWindowListener(new WindowAdapter() {
         @Override
         public void windowClosing(WindowEvent e) {
            System.out.println("closing to use this frame and connect database");
            toyService.closeConnect();
         }
      });

   } // ended 

   @Override
   public void actionPerformed(ActionEvent e) {
      if (toyService.delete() > 0) { // more than 0 means can delete
         reload();
      }
   }

   private void reload() {
      // connect and query again when user can delete
      toyTableModel.setToys(toyService.reads()); // prepare model for Jtable
      jTableToys.setModel(toyTableModel); // set model to Jtable
      jScrollPaneTable.getViewport().add(jTableToys);
   }

}
